<?xml version="1.0" encoding="UTF-8"?>

<project name="wix-adsense" default="build">
    <property name="workspace" value="${basedir}" />
    <property name="sourcedir" value="${basedir}/src/Wix" />
    <property name="builddir" value="${workspace}/app/build" />
    <property name="assetsdir" value="${basedir}/assets"/>
    <property name="toolsdir" value="${builddir}/tools"/>
    <property name="js.rules" value="white,undef,plusplus,newcap,vars,indent=4,adsafe=false,bitwise,browser,css,cap,forin,fragment,maxerr=200,unparam,sloppy"/>
    <property name="css.rules.error" value="important,empty-rules,display-property-grouping,font-faces,regex-selectors,import,duplicate-properties,ids"/>
    <property name="css.rules.warning" value="box-model,floats,adjoining-classes,shorthand,font-sizes,qualified-headings,unique-headings,zero-units,vendor-prefix,gradients,compatible-vendor-prefixes"/>

    <target name="build" depends="clean,prepare,parameters,composer,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit,phpcb,phpdoc"/>

    <target name="build-parallel" depends="clean,prepare,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdoc"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${builddir}/api"/>
        <delete dir="${builddir}/code-browser"/>
        <delete dir="${builddir}/coverage"/>
        <delete dir="${builddir}/logs"/>
        <delete dir="${builddir}/pdepend"/>
        <delete dir="${builddir}/docs/*"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${builddir}/api"/>
        <mkdir dir="${builddir}/code-browser"/>
        <mkdir dir="${builddir}/coverage"/>
        <mkdir dir="${builddir}/logs"/>
        <mkdir dir="${builddir}/pdepend"/>
        <mkdir dir="${builddir}/docs"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${basedir}/app">
                <exclude name="**/cache/**"/>
                <include name="**/*.php"/>
                <modified/>
            </fileset>
            <fileset dir="${sourcedir}">
                <exclude name="**/cache/**"/>
                <include name="**/*.php"/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--exclude"/>
            <arg value="${basedir}/app/cache"/>
            <arg value="--log-csv"/>
            <arg value="${builddir}/logs/phploc.csv"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${sourcedir}"/>
            <arg value="text"/>
            <arg value="${basedir}/app/phpmd.xml"/>
        </exec>
    </target>

    <target name="phpmd-ci"
            description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${sourcedir}"/>
            <arg value="xml"/>
            <arg value="${basedir}/app/phpmd.xml"/>
            <arg value="--reportfile"/>
            <arg value="${builddir}/logs/pmd.xml"/>
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>


    <target name="phpcs-ci"
            description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle"/>
            <arg value="--report-file=${sourcedir}/logs/checkstyle.xml"/>
            <arg value="--standard=Symfony2"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

   <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd"/>
            <arg value="${builddir}/logs/pmd-cpd.xml"/>
            <arg path="${sourcedir}"/>
        </exec>
    </target>

    <target name="phpdoc">
        <exec executable="phpdoc">
            <arg value="--directory=${sourcedir}"/>
            <arg value="--target=${builddir}/docs"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit" failonerror="true">
            <arg value="--coverage-clover=${builddir}/logs/clover.xml"/>
            <arg value="--coverage-html=${builddir}/logs/coverage"/>
            <arg value="--log-junit=${builddir}/logs/junit.xml"/>
            <arg value="-c"/>
            <arg path="${basedir}/app/phpunit.xml"/>
        </exec>
    </target>


    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log"/>
            <arg path="${builddir}/logs"/>
            <arg value="--source"/>
            <arg path="${sourcedir}"/>
            <arg value="--output"/>
            <arg path="${builddir}/code-browser"/>
        </exec>
    </target>

    <target name="composer" description="Install the composer dependecies">
        <exec executable="composer">
            <arg value="install"/>
        </exec>
    </target>

    <target name="parameters" description="Copy parameters">
        <exec executable="cp" failonerror="true">
            <arg path="app/config/parameters.yml.dist" />
            <arg path="app/config/parameters.yml" />
        </exec>
    </target>

</project>
